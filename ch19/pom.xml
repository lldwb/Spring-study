<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>Spring-study</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>ch19</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- AspectJ 是 eclipse 开源组织编写的一套强大的AOP框架，
     它拥有特殊的编译器和类加载器，因此可以在编译时创建代理和类加载时创建代理，但由于 Spring 本身对 AOP 的实现是基于运行时创建代理，
     所以只能所以 JDK 和 CGLIB 来创建代理，但 Spring 却使用了 AspectJ 的切入点表达式以及相关的注解，使用起来更加简单和便捷-->
    <dependencies>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.9.8</version>
        </dependency>
    </dependencies>
</project>